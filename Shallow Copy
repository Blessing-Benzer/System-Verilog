/*--------------------Deep Copy-----------------------------*/
class a;
  bit [7:0] a1;
  int a2;
  
  function new(bit [7:0] a1, bit a2);
    this.a1 = a1;
    this.a2 = a2;
  endfunction
endclass

class b;
  bit [7:0] b1;
  bit b2;
  
  a ha;
  
  function new();
    b1 = 100;
    b2 = 1;
    ha = new(50, 1);
  endfunction
  
  function void display();
    $display("class b: b1 = %d, b2 = %d\n", b1, b2);
    $display("class a: a1 = %d, a2 = %d", ha.a1, ha.a2);
   
  endfunction
endclass

module top;
  b bh1, bh2;
  
  initial begin
    bh1 = new();
    $display("Calling display method using bh1");
    bh1.display();
    
    bh2 = new bh2;
    $display("After shallow copy bh1 --> bh2");
    $display("Calling display method using bh2");
    bh2.display();
    $display("--------------------------------");
    
    bh1.b1 = 200;
    bh1.b2 = 2;
    bh1.ha.a1 = 50;
    bh1.ha.a2 = 3;
    
    $display("Calling display method using bh1");
    bh1.display();
    $display("Calling display method using bh2");
    bh2.display();
    
  end
endmodule
